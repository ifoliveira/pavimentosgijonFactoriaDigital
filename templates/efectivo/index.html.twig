{% extends 'pages.html.twig' %}
{% block cabecera %} Efectivo {% endblock %}
{% block breadcrumb %} <li class="breadcrumb-item active">Efectivo</li>{% endblock %}
{% block title %}Efectivo (Caja){% endblock %}
{% block tablas %}
                <!-- ============================================================== -->
                <!-- Start Page Content -->
                <!-- ============================================================== -->
                <!-- Footer callback -->
                <div class="row">
                    <div class="col-12">
                        <div class="card">
                            <div class="card-body">
                                <h4 class="card-title">Movimientos</h4>
                                <h6 class="card-subtitle"></h6>
                                <div class="table-responsive">
                                    <table id="footer" class="table table-striped table-bordered display"
                                        style="width:100%">
                                            <thead>
                                                <tr>
                                                    <th>Id</th>
                                                    <th>tipoEf</th>
                                                    <th>ConceptoEf</th>
                                                    <th>FechaEf</th>
                                                    <th>ImporteEf</th>
                                                    <th>actions</th>
                                                </tr>
                                            </thead>
                                            <tbody>
                                            {% for efectivo in efectivos %}
                                                <tr>
                                                    <td>{{ efectivo.id }}</td>
                                                    <td>{{ efectivo.tipoEf }}</td>
                                                    <td>{{ efectivo.conceptoEf }}</td>
                                                    <td>{{ efectivo.fechaEf ? efectivo.fechaEf|date('Y-m-d') : '' }}</td>
                                                    <td align="right">{{ efectivo.importeEf |number_format(2) }}</td>
                                                    <td>
                                                        <a href="{{ path('efectivo_edit', {'id': efectivo.id}) }}">edit</a>
                                                        <i class="text-inverse pr-2" data-toggle="tooltip" title="Borrar efectivo" name="delete_detalle" id="{{ efectivo.id }}">
                                                                <i class="ti-trash"></i>
                                                    </td>
                                                </tr>
                                            {% else %}
                                                <tr>
                                                    <td colspan="6">no records found</td>
                                                </tr>
                                            {% endfor %}
                                            </tbody>
                                        <tfoot>
                                            <tr>
                                                <th colspan="4" style="text-align:right">Total:</th>
                                                <th></th>
                                            </tr>
                                        </tfoot>
                                    </table>
                                    <a href="{{ path('efectivo_new') }}">Create new</a>
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
    
                <!-- ============================================================== -->
                <!-- End PAge Content -->
                <!-- ============================================================== -->
                <!-- ============================================================== -->
                <!-- Right sidebar -->
                <!-- ============================================================== -->
                <!-- .right-sidebar -->
                <!-- ============================================================== -->
                <!-- End Right sidebar -->
                <!-- ============================================================== -->
            </div>
            <!-- ============================================================== -->
            <!-- End Container fluid  -->
            <!-- ============================================================== -->
{% endblock %}

{% block formulario %}{% endblock %}



{% block jscustom %}

    <!--This page plugins -->
    <script src="../../assets/libs/datatables/media/js/jquery.dataTables.min.js"></script>
    <script src="../../dist/js/pages/datatable/custom-datatable.js"></script>
    <script src="{{ asset('dist/js/pages/datatable/datatable-advanced.init.js') }}"></script>
    <script src="{{ asset('assets/libs/sweetalert2/dist/sweetalert2.all.min.js') }}"></script>
    <script src="{{ asset('assets/extra-libs/sweetalert2/sweet-alert.init.js') }}"></script>
    

    <!--Custom JavaScript -->
    
    <script language = "javascript">
           $('#footer').DataTable({
                "order": [
                            [3, "desc"]
                         ],
                "footerCallback": function(row, data, start, end, display) {
                    var api = this.api(),
                        data;


                    // Remove the formatting to get integer data for summation
                    var intVal = function(i) {
                        return typeof i === 'string' ?
                            i.replace(/[\$,]/g, '') * 1 :
                            typeof i === 'number' ?
                            i : 0;
                    };

                    // Total over all pages
                    total = api
                        .column(4)
                        .data()
                        .reduce(function(a, b) {
                            return intVal(a) + intVal(b);
                        }, 0);

                    // Total over this page
                    pageTotal = api
                        .column(4, { page: 'current' })
                        .data()
                        .reduce(function(a, b) {
                            return intVal(a) + intVal(b);
                        }, 0);

                    // Update footer
                    $(api.column(4).footer()).html(
                         pageTotal.toFixed(2) + '€' + '(' + total.toFixed(2) + ' €)'
                    );
                }
            });

        /****************************************
        *      Eliminar un efectivo                *
        *****************************************/

        $(document).on('click', 'i[name="delete_detalle"]' , async function(event) {
            let id = this.id;
                console.log (id);

            const swalWithBootstrapButtons = await Swal.mixin({
                customClass: {
                    confirmButton: 'btn btn-success',
                    cancelButton: 'mr-2 btn btn-danger'
                },
                buttonsStyling: false,
            })

            await swalWithBootstrapButtons.fire({
                title: 'Borrar efectivo',
                text: "Se va a borrar el efectivo " + id + " ",
                type: 'question',
                showCancelButton: true,
                confirmButtonText: 'Adelante',
                cancelButtonText: 'Noooo',
                reverseButtons: true
            }).then((result) => {
                
                if (result.value) {

                    delete_line(id);
                }
            })
        })

        function delete_line(id) 
        {
            $.ajax({  
               url:        '{{path("efectivo_delete_ajax")}}',  
               type:       'GET',   
               data:        ({id: id}),
               dataType:   'json',  
               async:      true,  
               
               success: function(response) { 
                    let timerInterval
                    Swal.fire({
                    type: 'success',
                    title: 'Se ha borrado correctamente!',
                    html: 'Se cerrara en breve',
                    timer: 2000,
                    showConfirmButton: false,
                    timerProgressBar: true,
                    willClose: () => {
                        clearInterval(timerInterval)
                    }
                    }).then((result) => {
                    /* Read more about handling dismissals below */
                    if (result.dismiss === Swal.DismissReason.timer) {
                        location.reload();
                    }
                    })
                   
               },  
               error : function(xhr, textStatus, errorThrown) {  
                  alert(textStatus);  
               }  
            }); 
        };              
   </script> 
{% endblock %}