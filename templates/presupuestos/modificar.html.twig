{% extends 'pages.html.twig' %}
{% form_theme form 'fields.html.twig' %}
{% block cabecera %} Presupuestos {% endblock %}
{% block breadcrumb %} <li class="breadcrumb-item active">Presupuestos List</li>{% endblock %}
{% block title %}Presupuestos List{% endblock %}
{% block tablas %}
                <!-- ============================================================== -->
                <!-- Start Page Content -->
                <!-- ============================================================== -->
                <!-- basic table -->
                <div class="row">
                    <div class="col-lg-8">
                    <div class="card">
                        <div class="card-body">
                            <a href="{{ path('presupuestos_show', {id: presupuesto.id}) }}"  class="btn btn-rounded btn-outline-success "> Volver</a>                                            
                                                                                      
                        </div>
                    </div>     
                    </div>
                </div>                
                <div class="row">
                    <div class="col-lg-8">
                    
                          <div class="card">
                          
                            <div class="card-body">
                                               {% set idmaterial = "" %}       
                                               {% set importepre = 0 %}      
                                               {% for presu in economic %}
                                                    {% if presu.aplicaEco == 'T' and presu.estadoEco == '1' %}
                                                        {% set idmaterial = presu.id %}
                                                        {% set importepre = presu.importeEco %}
                                                    {% endif %}
                                               {% endfor %}

                                <h3 class="card-title">PRODUCTOS</h3>
                                <h6 class="card-subtitle"></h6>
                                <div class="table-responsive">
                                    <table id="tbprod" class="table table-striped table-bordered text-inputs-searching">
                                         <thead>
                                             <tr>
                                                 <th>Id</th>
                                                 <th>tipo</th>        
                                                 <th>Descripcion</th>
                                                 <th>Precio</th>
                                                 <th>PVP</th>
                                                 <th>Stock</th>
                                             </tr>
                                         </thead>
                                         <tbody>
                                             {% for producto in productos %}
                                                 <tr>
                                                     <td>{{ producto.id }}</td>
                                                     <td>{{ producto.tipoPdId}}</td>
                                                     <td>{{ producto.descripcionPd }}</td>
                                                     <td>{{ producto.precioPd }}</td>
                                                     <td>{{ producto.pvpPd }}</td>
                                                     <td>{{ producto.stockPd }}</td>
                                                 </tr>
                                             {% else %}
                                                 <tr>
                                                     <td colspan="8">no records found</td>
                                                 </tr>
                                             {% endfor %}
                                         </tbody>
                                         <tfoot>
                                             <tr>
                                                 <th>Id</th>
                                                 <th>tipo</th>        
                                                 <th>Descripcion</th>
                                                 <th>Precio</th>
                                                 <th>PVP</th>
                                                 <th>Stock</th>
                                             </tr>
                                         </tfoot>
                                    </table>
                                </div>
                            </div>
                        </div>
                        <div class="card">
                            <div class="card-body">
                                <h4 class="card-title">Presupuesto Actual</h4>
                                <h6 class="card-subtitle"></h6>
                                <div class="table-responsive">
                                    <table id="footer" class="table table-striped table-bordered display"
                                        style="width:100%">
                                        <thead>
                                            <tr align="center"> 
                                                <th>Detalle</th>
                                                <th>Precio</th>
                                                <th>Unidades</th>
                                                <th>PVP</th>
                                            </tr>
                                        </thead>
                                        <tbody>
                                        {% for detalle in project.getCesta(cestaId).getdetallecesta %}
                                            <tr>
                                                <td>{{ detalle.productoDc.descripcionPd }}</td>
                                                <td align="right">{{ detalle.pvpDc |format_currency('EUR', locale='es') }}</td>
                                                <td align="center">{{ detalle.cantidadDC}}</td>
                                                
                                                <td align="right">{{ (detalle.cantidadDC * detalle.pvpDc)|format_currency('EUR', locale='es') }}</td>
                                            </tr>
                                        {% else %}
                                            <tr>
                                                <td colspan="7">no records found</td>
                                            </tr>
                                        {% endfor %}
                                        </tbody>
                                        <tfoot>
                                            <tr>
                                                <th colspan="3" style="text-align:right">Total:</th>
                                                <th style="text-align:right">{{project.getImporteTot(cestaId)|format_currency('EUR', locale='es')  }}</th>
                                            </tr>
                                        </tfoot>
                                    </table>
                                   
                                </div>
                            </div>
                        </div>
                    </div>
                    
                    <div class="col-lg-4">
                        <div class="card">
                            <div class="card-body">
                                <h4 class="card-title">Ticket Info</h4>
                            </div>
                            <div class="card-body bg-light">
                                <div class="row text-center">
                                    <div class="col-6 mt-2 mb-2">
                                        <span class="badge badge-warning">{{ presupuesto.EstadoPe }}</span>
                                    </div>
                                    <div class="col-6 mt-2 mb-2">
                                        {{ presupuesto.timestampModPe ? presupuesto.timestampModPe|date("F jS \\a\\t g:ia")  : '' }}
                                    </div>
                                </div>
                            </div>
                            <div class="card-body">
                                <h5 class="pt-3">Presupuesto de</h5>
                                <span>{{ presupuesto.clientePe.nombreCl }} {{ presupuesto.clientePe.apellidosCl }}</span>
                                <h5 class="mt-4">Direccion</h5>
                                <span>{{ presupuesto.clientePe.direccionCl }}</span>
                                <h5 class="mt-4">Telefono</h5>
                                <span>{{ presupuesto.clientePe.telefono1Cl }} - {{ presupuesto.clientePe.telefono2Cl }}</span>
                                <br/>
                            </div>
                        </div>
                        <div class="card">
                                <div class="card-body" id="loop"  data-cesta="{{ presupuesto.ticket.Id }}" data-material="{{ idmaterial }}" data-importepre="{{ importepre }}">
                                    {% include 'productos/loop.html.twig' %}
                                </div>
                        </div>


                  
                </div>

            <!-- ============================================================== -->
            <!-- End Container fluid  -->
            <!-- ============================================================== -->


{% endblock %}
{% block formulario %}{% endblock %}

{% block jscustom %}
    <!-- ============================================================== -->
    <!-- All Jquery -->
    <!-- ============================================================== -->
    <script src="{{ asset('assets/libs/jquery/dist/jquery.min.js') }}" ></script>
    <!-- Bootstrap tether Core JavaScript -->
    <script src="{{ asset('assets/libs/popper.js/dist/umd/popper.min.js') }}"></script>
    <script src="{{ asset('assets/libs/bootstrap/dist/js/bootstrap.min.js') }}"></script>
    <!-- apps -->
    <script src="{{ asset('dist/js/app.min.js') }}"></script>
    <script src="{{ asset('dist/js/app.init.js') }}"></script>
    <script src="{{ asset('dist/js/app-style-switcher.js') }}"></script>
    <!-- slimscrollbar scrollbar JavaScript -->
    <script src="{{ asset('assets/libs/perfect-scrollbar/dist/perfect-scrollbar.jquery.min.js') }}"></script>
    <script src="{{ asset('assets/extra-libs/sparkline/sparkline.js') }}"></script>
    <!--Wave Effects -->
    <script src="{{ asset('dist/js/waves.js') }}"></script>
    <!--Menu sidebar -->
    <script src="{{ asset('dist/js/sidebarmenu.js') }}"></script>
    <!--Custom JavaScript -->
    <script src="{{ asset('dist/js/feather.min.js') }}"></script>
    <script src="{{ asset('dist/js/custom.min.js') }}"></script>
    <!--This page plugins -->
    <script src="{{ asset('assets/libs/datatables/media/js/jquery.dataTables.min.js') }}"></script>
    <script src="{{ asset('dist/js/pages/datatable/custom-datatable.js') }}"></script>
    <script src="{{ asset('dist/js/pages/datatable/datatable-api.init.js') }}"></script>
    <script src="{{ asset('assets/libs/sweetalert2/dist/sweetalert2.all.min.js') }}"></script>
    <script src="{{ asset('assets/extra-libs/sweetalert2/sweet-alert.init.js') }}"></script>

    <!--This page JavaScript -->
    <script src="{{ asset('assets/libs/magnific-popup/dist/jquery.magnific-popup.min.js') }}"></script>
    <script src="{{ asset('assets/libs/magnific-popup/meg.init.js') }}"></script>
    <script src="{{ asset('assets/libs/summernote/dist/summernote-bs4.min.js') }}"></script>


    <script language = "javascript">
        $(document).ready(function(){   

        //=============================================//
        //    DOM/jquery events                        //
        //=============================================//
        var table = $('#tbprod').DataTable();
        var selector = document.querySelector("#loop");
        var cestaId = selector.dataset.cesta
        var economicid = selector.dataset.material
        var importepre = Number(selector.dataset.importepre)


       /****************************************
        *      Eliminar un producto             *
        *****************************************/

        $(document).on('click', 'i[name="delete_detalle"]' , function(event) {
            let id = this.id;
            this.dataset.cantidad;
            var cantidad = this.dataset.cantidad;       
            console.log(cantidad);

            delete_line(id, cantidad);
        })
        

        function delete_line(id, importeresta) 
        {
            $.ajax({  
               url:        '{{path("detallecesta_delete")}}',  
               type:       'GET',   
               data:        ({id: id}),
               dataType:   'json',  
               async:      true,  
               
               success: function(response) {  
                    importe =  Number(importepre) - Number(importeresta);
                    modif_importe({{ presupuesto.id }},importe); 
                    actualiza_importe(economicid,importe); 
         
               },  
               error : function(xhr, textStatus, errorThrown) {  
                  alert(textStatus);  
               }  
            }); 
        };  

           
        /****************************************
        *       Insertar un producto      *
        ****************************************/

        $('#tbprod').on('click', 'tbody tr[role="row"]', function() {
                var data = table.row(this).data();
                const inputValue = 1
                const inputValue2 = data[4]
                const inputValue3 = data[3]
                const inputStep = 1
                const inputStep2 = 1
                const inputText = ""
                const inputValue0 = data[2]

                Swal.fire({
                title: 'Cantidad y PVP',
                html: `
                     <h1> "${inputValue0}" </h1>
                    <input type="text" value="${inputText}" class="swal2-input" id="range-value0" text-align="center">
                    <h2> Cantidad </h2>
                    <input type="number" value="${inputValue}" step="${inputStep}" class="swal2-input" id="range-value">
                    <h2> PVP </h2>
                    <input type="number" value="${inputValue2}" step="${inputStep2}" class="swal2-input" id="range-value2">
                    <h2> Coste </h2>
                    <input type="number" value="${inputValue3}" step="${inputStep2}" class="swal2-input" id="range-value3">`,

                }).then((result) => {
                    if (result.value) {
                        var data = table.row(this).data();
                        const inputText = Swal.getContent().querySelector('#range-value0');
                        texto = inputText.value;
                        const inputNumber = Swal.getContent().querySelector('#range-value');
                        cantidad = inputNumber.value;
                        const inputNumber2 = Swal.getContent().querySelector('#range-value2');
                        importe = inputNumber2.value;
                        const inputNumber3 = Swal.getContent().querySelector('#range-value3');
                        coste = inputNumber3.value;
                        insert_line(data,cantidad,importe,coste,cestaId,texto);
                    }
                })

         })

        function insert_line(producto,cantidad,importe,coste,cesta,texto) 
        {
            $.ajax({  
               url:        '{{path("detallecesta_new") }}',   
               type:       'GET',   
               data:        ({producto: producto, cantidad:cantidad, importe:importe, coste:coste, cesta:cesta, texto:texto}),
               dataType:   'json',  
               async:      true,  
               
               success: function(response) {  
                    
                    importe = importepre + (Number(importe) * Number(cantidad));
                    modif_importe({{ presupuesto.id }},importe); 
                    actualiza_importe(economicid,importe); 

               },  
               error : function(xhr, textStatus, errorThrown) {  
                  alert(textStatus);  
               }  
            });  
        };  

        function modif_importe(id,importe) 
        {
            $.ajax({  
               url:        '{{path("presuactualiza_imp") }}',   
               type:       'GET',   
               data:        ({id: id, importe:importe}),
               dataType:   'json',  
               async:      true,  
               
               success: function(response) {  
                    

               },  
               error : function(xhr, textStatus, errorThrown) {  
                  alert(textStatus);  
               }  
            });  
        };  


         
   

        /****************************************
        *       ACTUACION SOBRE ECONOMICS       *
        *****************************************/

        $(document).on('click', 'i[name="no_aplica"]' , function(event) {
            let id = this.id;
            let estado = this.dataset.estado;            

            $.ajax({  
               url:        '../economicpresu/estado/ajax',  
               type:       'GET',   
               data:        ({estado:estado ,id:id}),
               dataType:   'json',  
               async:      true,  
               
               success: function(response) {  
                   location.reload();   
               },  
               error : function(xhr, textStatus, errorThrown) {  
                  alert(textStatus);  
               }  
            });  
            });

        $(document).on('click', 'i[name="cambiar_importe"]' , function(event) {

            let id = this.id;
            let importe = this.dataset.importe;     

            const inputValue = Number(importe).toFixed(2);
                const importe2 = 0;
                const inputStep = 1;
    
            const swalWithBootstrapButtons = Swal.mixin({
                customClass: {
                    confirmButton: 'btn btn-success',
                    cancelButton: 'mr-2 btn btn-danger',
                    denyButton: 'mr-2 btn btn-danger'
                },
                buttonsStyling: false,

            })




            swalWithBootstrapButtons.fire({
             
             
                title: 'IMPORTE',
                text: "Importe total" ,
                type: 'question',
                html: `
                    <input type="number" value="${inputValue}" step="${inputStep}" class="swal2-input" id="range-value" text-align="right">`,
                showCancelButton: true,
                confirmButtonText: 'Modificar',
                cancelButtonText: 'Pagar',
                reverseButtons: true
                }).then((result) => {
                const inputNumber = Swal.getContent().querySelector('#range-value');
                importe = inputNumber.value;
                if (result.value) {

                  
                   actualiza_importe(id,importe); 
                    

                } else if (
                    // Read more about handling dismissals
                    result.dismiss === Swal.DismissReason.cancel
                ) {
                   pagar_economic(id,importe,"Efectivo"); 
                }

            })
            });     

            function actualiza_importe (id,importe) 
            {
                $.ajax({  
                url:        '../../economicpresu/importe/ajax',  
                type:       'GET',   
                data:        ({importe:importe ,id:id}),
                dataType:   'json',  
                async:      true,  
                
                success: function(response) {  
                    location.reload();   
                },  
                error : function(xhr, textStatus, errorThrown) {  
                    alert(textStatus);  
                }                      
                });
            };

            function pagar_economic(id,importe,modo) 
            {
                $.ajax({  
                url:        '../economicpresu/pagar/ajax',  
                type:       'GET',   
                data:        ({importe:importe, id:id, modo:modo}),
                dataType:   'json',  
                async:      true,  
                
                success: function(response) {  
                    location.reload();   
                },  
                error : function(xhr, textStatus, errorThrown) {  
                    alert(textStatus);  
                }                      
                });
            };



            $(document).on('click', 'i[name="ticket_material"]' , function(event) {
                const swalWithBootstrapButtons = Swal.mixin({
                    customClass: {
                        confirmButton: 'btn btn-success',
                        cancelButton: 'mr-2 btn btn-danger'
                    },
                    buttonsStyling: false,
                })
                let importe = this.dataset.importe;  
                let id = this.id;        

                const inputValue = Number(importe).toFixed(2)
                const importe2 = Number(importe).toFixed(2)
                const inputStep = 1

                swalWithBootstrapButtons.fire({
                    title: 'Señal',
                    text: "Importe total" ,
                    type: 'warning',
                    html: `
                        <h2> Cantidad  - ${importe2} €</h2> 
                        <input type="number" value="${inputValue}" step="${inputStep}" class="swal2-input" id="range-value" text-align="right">`,
                    showCancelButton: true,
                    confirmButtonText: 'Tarjeta',
                    cancelButtonText: 'Efectivo',
                    reverseButtons: true
                }).then((result) => {
                    const inputNumber = Swal.getContent().querySelector('#range-value');
                    importe = inputNumber.value;
                    if (result.value) {
                        cobrar_presu(importe, "Tarjeta",id); 
                    } else if (
                        // Read more about handling dismissals
                        result.dismiss === Swal.DismissReason.cancel
                    ) {
                        cobrar_presu(importe, "Efectivo",id);
                    }

            })

         })



        function cobrar_presu(importesenal, tipopago, id) 
        {
            $.ajax({  
                    url:        '{{ path("cobrarpresu", {id:presupuesto.id  }) }}',  
                    type:       'GET',   
                    data:        ({tipopago : tipopago, importesenal : importesenal, id:id}),
                    dataType:   'json',  
                    async:      true,  
                    
                    success: function(response) {  
                            location.reload();   
                    },  
                    error : function(xhr, textStatus, errorThrown) {  
                        alert(textStatus);  
                    }  
                    });

        };           

            $(document).on('click', 'i[name="ticket_mano"]' , function(event) {
                const swalWithBootstrapButtons = Swal.mixin({
                    customClass: {
                        confirmButton: 'btn btn-success',
                        cancelButton: 'mr-2 btn btn-danger'
                    },
                    buttonsStyling: false,
                })
                let importe = this.dataset.importe;  
                let id = this.id;        

                const inputValue = Number(importe).toFixed(2)
                const importe2 = Number(importe).toFixed(2)
                const inputStep = 1

                swalWithBootstrapButtons.fire({
                    title: 'Señal',
                    text: "Importe total" ,
                    type: 'warning',
                    html: `
                        <h2> Cantidad  - ${importe2} €</h2> 
                        <input type="number" value="${inputValue}" step="${inputStep}" class="swal2-input" id="range-value" text-align="right">`,
                    showCancelButton: true,
                    confirmButtonText: 'Tarjeta',
                    cancelButtonText: 'Efectivo',
                    reverseButtons: true
                }).then((result) => {
                    const inputNumber = Swal.getContent().querySelector('#range-value');
                    importe = inputNumber.value;
                    if (result.value) {
                        cobrar_mano(importe, "Tarjeta",id); 
                    } else if (
                        // Read more about handling dismissals
                        result.dismiss === Swal.DismissReason.cancel
                    ) {
                        cobrar_mano(importe, "Efectivo",id);
                    }

            })

         })

        function cobrar_mano(importe, tipopago, id) 
        {
            $.ajax({  
                    url:        '{{ path("cobrarmanopresu", {id:presupuesto.id  }) }}',  
                    type:       'GET',   
                    data:        ({tipopago : tipopago, importe : importe, id:id}),
                    dataType:   'json',  
                    async:      true,  
                    
                    success: function(response) {  
                            location.reload();   
                    },  
                    error : function(xhr, textStatus, errorThrown) {  
                        alert(textStatus);  
                    }  
                    });

        };       
              
       });  

    </script>
{% endblock %}