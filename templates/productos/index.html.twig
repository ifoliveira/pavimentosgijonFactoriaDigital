{% extends 'inicio2.html.twig' %}
{% block eltiempo %} {% endblock %}
{% block cabecera %} Ticket nuevo {% endblock %}
{% block breadcrumb %} <li class="breadcrumb-item active">Ticket</li>{% endblock %}
{% block stylesheets %}
        {{ parent() }} 
        <link rel="stylesheet" type="text/css" href="{{ asset('assets/extra-libs/prism/prism.css') }}">
          <!-- This page plugin CSS -->
        <link href="{{ asset('assets/libs/datatables.net-bs4/css/dataTables.bootstrap4.css') }}" rel="stylesheet">        
{% endblock %}
{% block title %}Nuevo Ticket {% endblock %}
{% block cardbody1 %}
                <!-- ============================================================== -->
                <!-- Start Page Content -->
                <!-- ============================================================== -->
                <div class="row">
                    <!-- Column -->
                    <div class="col-md-9 col-lg-9">
                        <div class="card">
                            <div class="card-body">
                                <h4 class="card-title">Productos</h4>
                                <h6 class="card-subtitle">Para a√±adir productos seleccionar en la lista</h6>
                                <div class="table-responsive">
                                    <table id="tbprod" class="table table-striped table-bordered text-inputs-searching">
                                         <thead>
                                             <tr>
                                                 <th>Id</th>
                                                 <th>tipo</th>        
                                                 <th>Descripcion</th>
                                                 <th>Precio</th>
                                                 <th>PVP</th>
                                                 <th>Stock</th>
                                             </tr>
                                         </thead>
                                         <tbody>
                                             {% for producto in productos %}
                                                 <tr>
                                                     <td>{{ producto.id }}</td>
                                                     <td>{{ producto.tipoPdId}}</td>
                                                     <td>{{ producto.descripcionPd }}</td>
                                                     <td align="right">{{ producto.precioPd|format_currency('EUR', locale='es')   }}</td>
                                                     <td align="right">{{ producto.pvpPd|format_currency('EUR', locale='es')  }}</td>
                                                     <td>{{ producto.stockPd }}</td>
                                                 </tr>
                                             {% else %}
                                                 <tr>
                                                     <td colspan="8">no records found</td>
                                                 </tr>
                                             {% endfor %}
                                         </tbody>
                                         <tfoot>
                                             <tr>
                                                 <th>Id</th>
                                                 <th>tipo</th>        
                                                 <th>Descripcion</th>
                                                 <th>Precio</th>
                                                 <th>PVP</th>
                                                 <th>Stock</th>
                                             </tr>
                                         </tfoot>
                                    </table>
                                </div>
                            </div>
                        </div>
                    </div>
                    <!-- Column -->
                    <div class="col-md-3 col-lg-3">
                        <div class="card">
                            <div class="card-body" id="loop" data-cesta="{{ project.getCestaUser(app.user).getId }}" data-dirtk="{{ ticketsDir }}">
                                {% include 'productos/loop.html.twig' %}
                            </div>
                            <div class="card-body">
                                <button class="btn btn-success" id="Checkout">Generar ticket</button>
                                <button class="btn btn-secondary btn-outline" id="Cancelar_Cesta">Borrar ticket</button>
                            </div>
                        </div>
                    </div>
                </div>
                <!-- ============================================================== -->
                <!-- End PAge Content -->
                <!-- ============================================================== -->
            </div>
            <!-- ============================================================== -->
            <!-- End Container fluid  -->
            <!-- ============================================================== -->
            <!-- ============================================================== -->
            <!-- End Page wrapper  -->
            <!-- ============================================================== -->
        </div>


{% endblock %}

{% block formulario %}{% endblock %}

{% block jscustom %}

    <!-- Bootstrap tether Core JavaScript -->
    <script src="{{ asset('assets/libs/popper.js/dist/umd/popper.min.js') }}"></script>
    <script src="{{ asset('assets/libs/bootstrap/dist/js/bootstrap.min.js') }}"></script>
    <script src="{{ asset('dist/js/ConectorJavaScript.js') }}"></script>
    <!-- slimscrollbar scrollbar JavaScript -->
    <script src="{{ asset('assets/libs/perfect-scrollbar/dist/perfect-scrollbar.jquery.min.js') }}"></script>
    <script src="{{ asset('assets/extra-libs/sparkline/sparkline.js') }}"></script>
    <!--Wave Effects -->
    <script src="{{ asset('dist/js/waves.js') }}"></script>
    <!--Menu sidebar -->
    <script src="{{ asset('dist/js/sidebarmenu.js') }}"></script>

    <!--This page plugins -->
    <script src="{{ asset('assets/extra-libs/datatables.net/js/jquery.dataTables.min.js') }}"></script>
    <script src="{{ asset('assets/extra-libs/datatables.net-bs4/js/dataTables.responsive.min.js') }}"></script>
    <script src="{{ asset('dist/js/pages/datatable/datatable-basic.init.js') }}"></script>
    
    <script src="{{ asset('dist/js/pages/datatable/datatable-api.init.js') }}"></script>
    <script src="{{ asset('assets/libs/sweetalert2/dist/sweetalert2.all.min.js') }}"></script>
    <script src="{{ asset('assets/extra-libs/sweetalert2/sweet-alert.init.js') }}"></script>

    <script language = "javascript">


        $(document).ready(function(){
        //=============================================//
        //    DOM/jquery events                        //
        //=============================================//
        var table = $('#tbprod').DataTable();   
        var selector = document.querySelector("#loop");
        var cestaId = selector.dataset.cesta
        var directoriotk = selector.dataset.dirtk

        /****************************************
        *       Insertar un producto      *
        ****************************************/

        $('#tbprod').on('click', 'tbody tr[role="row"]', function() {

            // Datos de la fila seleccionada en la lista de productos
                var data = table.row(this).data();
                var res = data[4].split("&");
                var res1 = data[3].split("&");

                const inputValue = 1
                const inputValue2 =  res[0].replace(/,/g, '.')
                const inputValue3 = res1[0].replace(/,/g, '.')
                const inputValue4 = 0
                const inputStep = 1
                const inputStep2 = 1
                const inputText = ""
                const inputValue0 = data[2]
                
            // Pop up con datos del producto
                Swal.fire({
                title: 'Cantidad y PVP',
                html: `
                    <h2> ${inputValue0} </h2>
                    <input type="text" value="${inputText}" class="swal2-input" id="range-value0" text-align="center">
                    <h2> Cantidad </h2>
                    <input type="number" value="${inputValue}" step="${inputStep}" class="swal2-input" id="range-value" text-align="center">
                    <h2> PVP </h2>
                    <input type="number" value="${inputValue2}" step="${inputStep2}" class="swal2-input" id="range-value2">
                    <h2> Coste </h2>
                    <input type="number" value="${inputValue3}" step="${inputStep2}" class="swal2-input" id="range-value3">
                    <h2> Descuento </h2>
                    <input type="number" value="${inputValue4}" step="${inputStep2}" class="swal2-input" id="range-value4">`,

                }).then((result) => {
                    if (result.value) {
            // Llamamos al insert line
                        var data = table.row(this).data();
                        const inputText = Swal.getContent().querySelector('#range-value0');
                        texto = inputText.value;
                        const inputNumber = Swal.getContent().querySelector('#range-value');
                        cantidad = inputNumber.value;
                        const inputNumber2 = Swal.getContent().querySelector('#range-value2');
                        importe = inputNumber2.value;
                        const inputNumber3 = Swal.getContent().querySelector('#range-value3');
                        coste = inputNumber3.value;
                        const inputNumber4 = Swal.getContent().querySelector('#range-value4');
                        descuento = inputNumber4.value;                        
                        insert_line(data,cantidad,importe,coste,cestaId,texto,descuento);
                    }
                })

         })

        function insert_line(producto,cantidad,importe,coste,cesta,texto,descuento) 
        {
            $.ajax({  
               url:        '{{path("detallecesta_new") }}',   
               type:       'GET',   
               data:        ({producto: producto, cantidad:cantidad, importe:importe, coste:coste, cesta:cesta, texto:texto, descuento:descuento}),
               dataType:   'json',  
               async:      true,  
               
               success: function(response) {  
                    $('#loop').html(response.template);
                    //document.querySelector("span[name='cantidad']").innerText =  response.cantidad;

               },  
               error : function(xhr, textStatus, errorThrown) {  
                  alert(textStatus);  
               }  
            });  
        };  

        /****************************************
        *       Sumar o restar un producto      *
        *****************************************/

        $(document).on('click', 'i[name="plus-minus"]' , function(event) {
            let id = this.id;
 
            let cantidad = this.dataset.cantidad;

            if (this.classList.contains("fa-minus-circle")){
                cantidad--;
            }else{
                cantidad++;
            };

            if (cantidad==0) {
                delete_line(id);     
            }else{
                actualiza_line(id, cantidad);
            }

        })


        function actualiza_line(id,cantidad) 
        {
            $.ajax({  
               url:        '../detallecesta/plusminus/ajax',  
               type:       'GET',   
               data:        ({cantidad: cantidad ,id: id}),
               dataType:   'json',  
               async:      true,  
               
               success: function(response) {  
                   $('#loop').html(response.template);
                   //document.querySelector("span[name='cantidad']").innerText     =  response.cantidad;
               },  
               error : function(xhr, textStatus, errorThrown) {  
                  alert(textStatus);  
               }  
            });  
        };  


        /****************************************
        *      Eliminar un producto             *
        *****************************************/

        $(document).on('click', 'i[name="delete_detalle"]' , function(event) {
            let id = this.id;
            delete_line(id);
        })
        

        function delete_line(id) 
        {
            $.ajax({  
               url:        '{{path("detallecesta_delete")}}',  
               type:       'GET',   
               data:        ({id: id}),
               dataType:   'json',  
               async:      true,  
               
               success: function(response) {  
                   $('#loop').html(response.template);
                   document.querySelector("span[name='cantidad']").innerText     =  response.cantidad;
               },  
               error : function(xhr, textStatus, errorThrown) {  
                  alert(textStatus);  
               }  
            }); 
        };  

        /****************************************
        *      Eliminar cesta            *
        *****************************************/

        $(document).on('click', 'button[id="Cancelar_Cesta"]' , function(event) {

            $.ajax({  
                    url:        '{{ path("delete_logico", {id: cestaId}) }}',  
                    type:       'GET',   
                    dataType:   'json',  
                    async:      true,  
                    
                    success: function(response) {  
                            location.reload();
                            
                    },  
                    error : function(xhr, textStatus, errorThrown) {  
                        alert(textStatus);  
                    }  
                    });

        });

        /****************************************
        *      Finalizar ticket                 *
        *****************************************/
        function abrirNuevoTab(url) {
            // Abrir nuevo tab
            console.log("Abrir" + url);

            var win = window.open(url, '_blank');
            // Cambiar el foco al nuevo tab (punto opcional)
            win.focus();
        }

        $(document).on('click', 'button[id="Checkout"]' , async function(event) {


            // Datos de la fila seleccionada en la lista de productos
                var data = table.row(this).data();
                const inputValue = 1
                const inputStep = 1
                var senal = 0

                const { value: accept } =  await Swal.fire({
                title: 'SE√ëAL',
                input: 'checkbox',
                inputValue: 0,
                inputPlaceholder:
                    '¬øEs el pago de una se√±al?',
                confirmButtonText:
                    'Continuar <i class="fa fa-arrow-right"></i>',

                })

                if (accept) {
            // Pop up importe se√±al
                     await Swal.fire({
                    title: 'Importe Se√±al',
                    html: `
                        <h2> Importe Se√±al </h2>
                        <input type="number" value="${inputValue}" step="${inputStep}" class="swal2-input" id="range-value" text-align="center">`,

                    }).then((result) => {
                        if (result.value) {
            // Llamamos al insert line
                            const inputNumber = Swal.getContent().querySelector('#range-value');
                            senal = inputNumber.value;

                        }
                    })

                } 

            const swalWithBootstrapButtons = await Swal.mixin({
                customClass: {
                    confirmButton: 'btn btn-success',
                    cancelButton: 'mr-2 btn btn-danger'
                },
                buttonsStyling: false,
            })

            await swalWithBootstrapButtons.fire({
                title: 'Metodo de pago',
                text: "Selecciona un m√©todo de pago",
                type: 'warning',
                showCancelButton: true,
                confirmButtonText: 'Tarjeta',
                cancelButtonText: 'Efectivo',
                reverseButtons: true
            }).then((result) => {
                if (result.value) {
                    ticket_pdf("Tarjeta", senal) 
                } else if (
                    // Read more about handling dismissals
                    result.dismiss === Swal.DismissReason.cancel
                ){
                    ticket_pdf("Efectivo", senal) 
                }
            })

         })

        function ticket_script(tipopago, importesnal) 
        {


            
            $.ajax({             
                    url:        '{{ path("ticketdet", {id: cestaId}) }}',  
                    type:       'GET',   
                    dataType:   'json',  
                    async:      true,  
                    
                    success: function(response) {  
                            for( contador=0; contador < response.length; contador++ )
                            {
                                console.log(response[contador].cantidad);
                            }                            
                    },  
                    error : function(xhr, textStatus, errorThrown) {  
                        alert(textStatus);  
                    }  
                    });

        };  
        
        function ticket_pdf(tipopago, importesnal) 
        {

            $.ajax({             
                    url:        '{{ path("ticketpdf", {id: cestaId}) }}',  
                    type:       'GET',   
                    data:        ({tipopago:tipopago, importesnal:importesnal}),
                    dataType:   'json',  
                    async:      true,  
                    
                    success: function(response) {  

                            ticket_script3(tipopago, importesnal);
                            ticket_finalizar(tipopago, response.namepdf, response.importe, response.importesnal);
                            abrirNuevoTab('/Tickets/' + response.namepdf);
                            
                    },  
                    error : function(xhr, textStatus, errorThrown) {  
                        alert(textStatus);  
                    }  
                    });

        };  

        const $estado = document.querySelector("#estado"),
        $listaDeImpresoras = document.querySelector("#listaDeImpresoras"),
        $btnLimpiarLog = document.querySelector("#btnLimpiarLog"),
        $btnImprimir = document.querySelector("#btnImprimir");


        
        function ticket_script3(tipopago, importesnal) 
        {   
	
			const Price = new Intl.NumberFormat('de-DE',
                        {minimumFractionDigits: 2 });
                // Select elements by their data attribute
                const entryInfoElements =
                    document.querySelectorAll('[data-entry-info]');

                // Map over each element and extract the data value
                const entryInfoObjects =
                        Array.from(entryInfoElements).map(
                        item => JSON.parse(item.dataset.entryInfo)
                    );
                let total = 0;

		        let iva = 0;
		    let descripcion='';
            let now = new Date();
            const options = { weekday: 'long', year: 'numeric', month: 'long', day: 'numeric' };
            const loguear = texto => $estado.textContent += (new Date()).toLocaleString() + " " + texto + "\n";


			const nombreImpresora = "EPSONTicket"; // Puede ser obtenida de la lista de impresoras o puedes escribirlo si lo conoces
			const conector = new ConectorPluginV3();

			conector.Iniciar();
			conector.EstablecerTama√±oFuente(1, 1);
			conector.DeshabilitarElModoDeCaracteresChinos();
 			conector.EstablecerAlineacion(ConectorPluginV3.ALINEACION_CENTRO);
			conector.Corte(1);
			conector.Feed(1);
            conector.EscribirTexto("P A V I M E N T O S    G I J O N\n");
		    conector.Feed(1);
            conector.EscribirTexto("C.I.F. 53543499-M \n");
		    conector.Feed(1);
		    conector.EscribirTexto("Avenida Schultz N¬∫ 28 Bajo\n");
		    conector.Feed(1);
            conector.EscribirTexto("Telefono: 985-391-326\n");
		    conector.EscribirTexto("Whatsapp: 684-608-811\n");
		    conector.EscribirTexto("Tambien en https://www.pavimentosgijon.es   \n");
            conector.Feed(1);
            conector.EscribirTexto("-----------------------------------------------\n");
            conector.EscribirTexto("FACTURA SIMPLIFICADA\n");
            conector.EscribirTexto("-----------------------------------------------\n");
			conector.Feed(1);
				entryInfoObjects[0].forEach(function(cantidad,index) {


                    cantidad.forEach(function(element,index) {
                       
                       parcial = (element.cantidad * element.precio)
                       total = total + parcial
					   cantidad = element.cantidad > 9 ? "" + element.cantidad: "0" + element.cantidad;
					   descripcion = element.descripcion.substr(0,28);
                        
                       $linea = '  ' + cantidad + '  ' + descripcion.padEnd(28) + ' ' + parcial.toLocaleString('de-DE', {minimumFractionDigits: 2, maximumFractionDigits: 2}).padStart(9) + ' EUR' + "\n";
                       conector.EscribirTexto($linea);
                    });

            iva = (total * 0.21 )/1,21
			conector.EscribirTexto("-----------------------------------------------\n");
			$linea = '  IVA 21%:                         ' + iva.toLocaleString('de-DE', {minimumFractionDigits: 2, maximumFractionDigits: 2}).padStart(9) + ' EUR' + "\n";	
			conector.EscribirTexto($linea);
			conector.EstablecerEnfatizado(true);
			$linea = '  TOTAL :                          ' + total.toLocaleString('de-DE', {minimumFractionDigits: 2, maximumFractionDigits: 2}).padStart(9) + ' EUR' + "\n";	
			conector.EscribirTexto($linea);
	            });
            conector.EstablecerEnfatizado(false);
            conector.EstablecerAlineacion(ConectorPluginV3.ALINEACION_CENTRO);
            conector.EscribirTexto("-----------------------------------------------\n");
	        conector.Feed(1);
            conector.ImprimirCodigoQr("https://www.pavimentosgijon.es", 160, ConectorPluginV3.RECUPERACION_QR_MEJOR, ConectorPluginV3.TAMA√ëO_IMAGEN_NORMAL);
	        conector.Feed(1);
			conector.EstablecerEnfatizado(true);
            conector.EscribirTexto("***Gracias por su compra***");
            conector.Feed(4);
            conector.Corte(1);
			
			conector.imprimirEn(nombreImpresora);

        };  


        function ticket_finalizar(tipopago, numticket, importe, importesnal) 
        {
            
            $.ajax({             
                    url:        '{{ path("cestas_finalizar", {id: cestaId}) }}',  
                    type:       'GET',   
                    data:        ({tipopago : tipopago, numticket: numticket, importe:importe, importesnal:importesnal}),
                    dataType:   'json',  
                    async:      true,  
                    
                    success: function(response) {  
                            
                         location.reload();   
                    },  
                    error : function(xhr, textStatus, errorThrown) {  
                        alert(textStatus);  
                    }  
                    });

        };  



      });  
   </script> 
{% endblock %}
